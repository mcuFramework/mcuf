/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************************
 * Include
 */  
#include "HeapFifo.hpp"

/* ****************************************************************************************
 * Using
 */  
using mcuf::util::HeapFifo;

/* ****************************************************************************************
 * Construct Method
 */

/* ****************************************************************************************
 * Operator Method
 */

/* ****************************************************************************************
 * Public Method <Static>
 */
 
/* ****************************************************************************************
 * Public Method <Override>
 */

/* ****************************************************************************************
 * Public Method
 */

/**
 * 
 */
HeapFifo::HeapFifo(uint32_t elementSize, uint32_t capacity) :
          Fifo(new uint8_t[elementSize * capacity], (elementSize * capacity), elementSize){
}

/**
 * 
 */
HeapFifo::~HeapFifo(void){
  delete (uint8_t*)this->mMemory.pointer();
}

/* ****************************************************************************************
 * Protected Method <Static>
 */
 
/* ****************************************************************************************
 * Protected Method <Override>
 */ 

/* ****************************************************************************************
 * Protected Method
 */

/* ****************************************************************************************
 * Private Method
 */
 
/* ****************************************************************************************
 * End of file
 */ 

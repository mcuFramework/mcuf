/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

#ifndef MCUF_E457C780_A15D_4B2E_B4E4_47BC5CA8194D
#define MCUF_E457C780_A15D_4B2E_B4E4_47BC5CA8194D

/* ****************************************************************************************
 * Include
 */  
#include "mcuf_base.h"
#include "mcuf/util/Stack.hpp"



/* ****************************************************************************************
 * Namespace
 */  
namespace mcuf{
  namespace util{
    class AlignedStack;
  }
}



/* ****************************************************************************************
 * Class AlignedStack
 */  
class mcuf::util::AlignedStack extends mcuf::util::Stack{
  
  /* **************************************************************************************
   * Subclass
   */

  /* **************************************************************************************
   * Variable <Public>
   */

  /* **************************************************************************************
   * Variable <Protected>
   */

  /* **************************************************************************************
   * Variable <Private>
   */

  /* **************************************************************************************
   * Abstract method <Public>
   */

  /* **************************************************************************************
   * Abstract method <Protected>
   */

  /* **************************************************************************************
   * Construct Method
   */
  
  /**
   * Construct.
   */
  public: AlignedStack(void* buffer, uint32_t size);

  /**
   * Construct.
   */
  public: AlignedStack(mcuf::lang::Memory& memory);

  /**
   * Destruct.
   */
  public: virtual ~AlignedStack() = default;

  /* **************************************************************************************
   * Operator Method
   */

  /* **************************************************************************************
   * Public Method <Static>
   */

  /* **************************************************************************************
   * Public Method <Override>
   */

  /**
   * 
   */
  public: virtual void* alloc(uint32_t size);

  /**
   * 
   */
  public: virtual mcuf::lang::Memory allocMemory(uint32_t size);

  /* **************************************************************************************
   * Public Method
   */

  /* **************************************************************************************
   * Protected Method <Static>
   */

  /* **************************************************************************************
   * Protected Method <Override>
   */

  /* **************************************************************************************
   * Protected Method
   */

  /* **************************************************************************************
   * Private Method <Static>
   */

  /* **************************************************************************************
   * Private Method <Override>
   */
   
  /* **************************************************************************************
   * Private Method
   */
  
};
 


/* *****************************************************************************************
 * End of file
 */ 


#endif/* MCUF_E457C780_A15D_4B2E_B4E4_47BC5CA8194D */

/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************************
 * Include
 */  
#include "HeapBlockPool.hpp"

#include "mcuf.h"

/* ****************************************************************************************
 * Using
 */  
using mcuf::lang::Math;
using mcuf::util::HeapBlockPool;
 
/* ****************************************************************************************
 * Construct Method
 */

/**
 * 
 */
HeapBlockPool::HeapBlockPool(uint32_t elementSize, uint32_t capacity) :
               BlockPool(new uint32_t[Math::ceil(capacity, 32UL)],
                         new uint8_t[elementSize*capacity], 
                         elementSize,
                         capacity){

  return;
}


/**
 * 
 */
HeapBlockPool::~HeapBlockPool(){
  delete BlockPool::mPointer;
  delete BlockPool::mFlags;
}

/* ****************************************************************************************
 * Operator Method
 */

/* ****************************************************************************************
 * Public Method <Static>
 */
 
/* ****************************************************************************************
 * Public Method <Override>
 */

/* ****************************************************************************************
 * Public Method
 */
 
/* ****************************************************************************************
 * Protected Method <Static>
 */
 
/* ****************************************************************************************
 * Protected Method <Override>
 */ 

/* ****************************************************************************************
 * Protected Method
 */

/* ****************************************************************************************
 * Private Method
 */

/* ****************************************************************************************
 * End of file
 */ 
/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

#ifndef MCUF_C0CBB109_D7C7_4D02_9E97_1BE3A534DFAE
#define MCUF_C0CBB109_D7C7_4D02_9E97_1BE3A534DFAE

/* ****************************************************************************************
 * Include
 */  
#include "mcuf_base.h"
#include "mcuf/function/Runnable.h"
#include "mcuf/lang/Object.h"



/* ****************************************************************************************
 * Namespace
 */  
namespace mcuf{
  namespace function{
    class RunnableEvent;
  }
}



/* ****************************************************************************************
 * Class Boolean
 */  
class mcuf::function::RunnableEvent extends mcuf::lang::Object
      implements mcuf::function::Runnable{

  /* **************************************************************************************
   * Subclass
   */

  /* **************************************************************************************
   * Variable <Public>
   */

  /* **************************************************************************************
   * Variable <Protected>
   */

  /* **************************************************************************************
   * Variable <Private>
   */
  private: void (*event)(void);

  /* **************************************************************************************
   * Abstract method <Public>
   */
  
  /* **************************************************************************************
   * Abstract method <Protected>
   */

  /* **************************************************************************************
   * Construct Method
   */

  /**
   * 
   */
  public: RunnableEvent(void (*event)(void)){

    this->event = event;
    return;
  }
  
  /**
   * 
   */
  public: ~RunnableEvent(){
    return;
  }

  /* **************************************************************************************
   * Operator Method
   */

  /* **************************************************************************************
   * Public Method <Static>
   */

  /* **************************************************************************************
   * Public Method <Override>
   */
  
  /**
   * 
   */
  public: virtual void run(void){
    this->event();
  }

  /* **************************************************************************************
   * Public Method
   */

  /* **************************************************************************************
   * Protected Method <Static>
   */

  /* **************************************************************************************
   * Protected Method <Override>
   */

  /* **************************************************************************************
   * Protected Method
   */

  /* **************************************************************************************
   * Private Method <Static>
   */

  /* **************************************************************************************
   * Private Method <Override>
   */
   
  /* **************************************************************************************
   * Private Method
   */
   
};



/* *****************************************************************************************
 * End of file
 */ 


#endif/* MCUF_C0CBB109_D7C7_4D02_9E97_1BE3A534DFAE */

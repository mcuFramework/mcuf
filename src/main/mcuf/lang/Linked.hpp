/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

#ifndef MCUF_B0F0F032_A3B1_4BA1_B0A8_BB7F11C63CBD
#define MCUF_B0F0F032_A3B1_4BA1_B0A8_BB7F11C63CBD

/* ****************************************************************************************
 * Include
 */  

//-----------------------------------------------------------------------------------------
#include "mcuf_base.h"

/* ****************************************************************************************
 * Namespace
 */  
namespace mcuf{
  namespace lang{
    template<typename E> interface Linked;
  }
}

/* ****************************************************************************************
 * Class Linked
 */  
template<typename E>
interface mcuf::lang::Linked{

  /* **************************************************************************************
   * Subclass
   */

  /* **************************************************************************************
   * Variable <Public>
   */

  /* **************************************************************************************
   * Variable <Protected>
   */

  /* **************************************************************************************
   * Variable <Private>
   */

  /* **************************************************************************************
   * Abstract method <Public>
   */
   
  /**
   * 
   */
  virtual void addLinked(E* e) abstract;

  /**
   * 
   */
  virtual void insertLinked(E* e) abstract;

  /**
   *
   */
  virtual E* getNextLinked(void) abstract;

  /**
   * 
   */
  virtual bool hasNextLinked(void) abstract;

  /**
   * 
   */
  virtual E* removeLinked(void) abstract;

  /**
   * 
   */
  virtual E* removeAllLinked(void) abstract;

  /* **************************************************************************************
   * Abstract method <Protected>
   */

  /* **************************************************************************************
   * Construct Method
   */

  /* **************************************************************************************
   * Operator Method
   */

  /* **************************************************************************************
   * Public Method <Static>
   */

  /* **************************************************************************************
   * Public Method <Override>
   */

  /* **************************************************************************************
   * Public Method
   */

  /* **************************************************************************************
   * Protected Method <Static>
   */

  /* **************************************************************************************
   * Protected Method <Override>
   */

  /* **************************************************************************************
   * Protected Method
   */

  /* **************************************************************************************
   * Private Method <Static>
   */

  /* **************************************************************************************
   * Private Method <Override>
   */
   
  /* **************************************************************************************
   * Private Method
   */  

};



/* *****************************************************************************************
 * End of file
 */ 

#endif/* MCUF_B0F0F032_A3B1_4BA1_B0A8_BB7F11C63CBD */

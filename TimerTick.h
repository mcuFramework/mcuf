/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */
#ifndef MCUF_A06C91C0_16C1_42C9_801C_D7EBA5EBD731
#define MCUF_A06C91C0_16C1_42C9_801C_D7EBA5EBD731

/* ****************************************************************************************
 * Include
 */  

//-----------------------------------------------------------------------------------------
#include "mcuf/mcuf_base.h"

//-----------------------------------------------------------------------------------------
#include "mcuf/TimerTask.h"

/* ****************************************************************************************
 * Namespace
 */  
namespace mcuf{
  class TimerTick;
}


/* ****************************************************************************************
 * Class/Interface/Struct/Enum
 */  
class mcuf::TimerTick extends mcuf::TimerTask{

  /* **************************************************************************************
   * Variable <Public>
   */

  /* **************************************************************************************
   * Variable <Protected>
   */

  /* **************************************************************************************
   * Variable <Private>
   */
  private:
    int mStatus;

  /* **************************************************************************************
   * Abstract method <Public>
   */

  /* **************************************************************************************
   * Abstract method <Protected>
   */

  /* **************************************************************************************
   * Construct Method
   */
  public: 
    /**
     * @brief Construct a new Timer Tick object
     * 
     */
    TimerTick(void);

    /**
     * @brief Destroy the Timer Tick object
     * 
     */
    virtual ~TimerTick(void) override;

  /* **************************************************************************************
   * Operator Method
   */

  /* **************************************************************************************
   * Public Method <Static>
   */

  /* **************************************************************************************
   * Public Method <Override> - mcuf::function::Runnable
   */
  public:
    /**
     * @brief 
     * 
     */
    void run(void) override;

  /* **************************************************************************************
   * Public Method
   */
  public:
    /**
     * @brief read
     * 
     * @return int 
     */
    virtual int isDone(void);

    /**
     * @brief clear
     * 
     * @return int 
     */
    virtual void clear(void);

    /**
     * @brief read and clear
     * 
     */
    virtual int read(void);

  /* **************************************************************************************
   * Protected Method <Static>
   */

  /* **************************************************************************************
   * Protected Method <Override>
   */

  /* **************************************************************************************
   * Protected Method
   */

  /* **************************************************************************************
   * Private Method <Static>
   */

  /* **************************************************************************************
   * Private Method <Override>
   */

  /* **************************************************************************************
   * Private Method
   */

};

/* ****************************************************************************************
 * End of file
 */ 

#endif /* MCUF_A06C91C0_16C1_42C9_801C_D7EBA5EBD731 */
